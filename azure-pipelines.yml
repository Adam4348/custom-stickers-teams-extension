# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  batch: true # batch changes if true (the default); start a new build for every push if false
  branches:
    include: [master] # branch names which will trigger a build
    # exclude: [ string ] # branch names which will not
  # tags:
  #   include: [ string ] # tag names which will trigger a build
  #   exclude: [ string ] # tag names which will not
  paths:
    include: [manifest] # file paths which must match to trigger a build
    # exclude: [ string ] # file paths which will not trigger a build
jobs:
  - job: stciker_manifest_build # name of the deployment job, A-Z, a-z, 0-9, and underscore
    displayName: Build Sticker manifest # friendly name to display in the UI
    variables:
      WEB_HOST: stickers-api.newfuture.cc,
      HOSTNAME: sticker.newfuture.cc,
      AZURE_STORAGE_CDN: stickers.newfuture.cc,
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - task: NodeTool@0
        displayName: "Install Node.js"

      - script: |
          npm install
          npm run build
        workingDirectory: ./manifest
        displayName: "npm install and build"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: drop"
        inputs:
          PathtoPublish: "package/*.zip"

  - deployment: stciker_manifest_deployment # name of the deployment job, A-Z, a-z, 0-9, and underscore
    displayName: Upload package to CDN # friendly name to display in the UI
    pool: # see pool schema
      vmImage: "windows-2019"
    dependsOn: stciker_web_build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    continueOnError: false # 'true' if future jobs should run even if this job fails; defaults to 'false'
    timeoutInMinutes: 5 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
    environment: custom-stickers-manifest # target environment name and optionally a resource-name to record the deployment history; format: <environment-name>.<resource-name>
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureFileCopy@3
              displayName: "AzureBlob File Copy"
              inputs:
                SourcePath: "$(Agent.BuildDirectory)/drop"
                azureSubscription: "Visual Studio Enterprise (087cc3e0-4650-424c-a20f-76e018064603)"
                Destination: AzureBlob
                storage: customstickers
                ContainerName: "$web"
