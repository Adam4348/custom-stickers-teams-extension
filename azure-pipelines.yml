jobs:
    - job: stciker_server_build # name of the deployment job, A-Z, a-z, 0-9, and underscore
      displayName: Build Sticker Server API # friendly name to display in the UI
      pool:
          vmImage: "ubuntu-18.04"
      steps:
          - task: UseNode@1
            displayName: "Use Node version"

          - task: Npm@1
            displayName: "npm install"
            inputs:
                workingDir: server
                verbose: false

          - task: Npm@1
            displayName: "npm run build"
            inputs:
                command: custom
                workingDir: server
                verbose: true
                customCommand: "run build"

          - task: Npm@1
            displayName: "npm ci --only=production"
            inputs:
                command: custom
                workingDir: server
                verbose: true
                customCommand: "ci --only=production"

          - task: ArchiveFiles@2
            displayName: "Archive server"
            inputs:
                rootFolderOrFile: server
                includeRootFolder: false

          - task: CopyFiles@2
            displayName: "Copy File to: $(TargetFolder)"
            inputs:
                SourceFolder: "$(Build.ArtifactStagingDirectory)"
                Contents: "$(Build.BuildId).zip"
                TargetFolder: '$(Build.ArtifactStagingDirectory)\ArtifactsToBePublished'

          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact: drop"
            inputs:
                PathtoPublish: '$(Build.ArtifactStagingDirectory)\ArtifactsToBePublished'

    - deployment: stciker_server_deployment # name of the deployment job, A-Z, a-z, 0-9, and underscore
      displayName: Deploy server API to azure # friendly name to display in the UI
      pool: # see pool schema
          vmImage: "ubuntu-18.04"
      dependsOn: stciker_server_build
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      continueOnError: false # 'true' if future jobs should run even if this job fails; defaults to 'false'
      timeoutInMinutes: 5 # how long to run the job before automatically cancelling
      cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
      variables: { NODE_ENV: production }
      environment: custom-stickers-api  # target environment name and optionally a resource-name to record the deployment history; format: <environment-name>.<resource-name>
      strategy:
          runOnce:
              deploy:
                  steps:
                    - task: AzureWebApp@1
                      displayName: 'Azure Web App Deploy: custom-stickers'
                      inputs:
                        azureSubscription: 'custom-stickers - Azure'
                        appType: webAppLinux
                        appName: 'custom-stickers'
                        runtimeStack: 'NODE|lts'
                        package: '$(System.ArtifactsDirectory)/**/*.zip'
                        startUpCommand: 'npm start'
                        
